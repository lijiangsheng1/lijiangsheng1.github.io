<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>翻译 on 适兕的博客</title>
    <link>http://lijiangsheng1.github.io/tags/%E7%BF%BB%E8%AF%91/</link>
    <description>Recent content in 翻译 on 适兕的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <lastBuildDate>Fri, 20 May 2016 19:35:45 +0800</lastBuildDate>
    <atom:link href="http://lijiangsheng1.github.io/tags/%E7%BF%BB%E8%AF%91/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>精心布局的开源</title>
      <link>http://lijiangsheng1.github.io/posts/opensource/open_by_design/</link>
      <pubDate>Fri, 20 May 2016 19:35:45 +0800</pubDate>
      
      <guid>http://lijiangsheng1.github.io/posts/opensource/open_by_design/</guid>
      <description>

&lt;h2 id=&#34;由开源和开放治理所带来的云计算的转变:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;由开源和开放治理所带来的云计算的转变&lt;/h2&gt;

&lt;p&gt;原文链接：&lt;a href=&#34;https://www.oreilly.com/learning/open-by-design&#34;&gt;Open By Design&lt;/a&gt;，作者：&lt;a href=&#34;https://www.oreilly.com/people/6e78b-philip-estes&#34;&gt;Philip Estes&lt;/a&gt;和&lt;a href=&#34;https://www.oreilly.com/people/3ec19-doug-davis&#34;&gt;Doug Davis&lt;/a&gt;，写于2016年1月26日&lt;/p&gt;

&lt;h2 id=&#34;介绍:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;介绍&lt;/h2&gt;

&lt;p&gt;如果说&lt;a href=&#34;http://www.aberdeeninvestment.com/wp-content/uploads/2009/11/Why-Software-Is-Eating-The-World-8-20-111.pdf&#34;&gt;软件正在慢条斯理的将这个世界吃掉&lt;/a&gt;的话，那么我们可以毫不夸张的说开源软件正在吞噬世界。现在的开源可不像十几年前那样，几乎无人问津，现在到处都在谈论开源（对于入门者来说，看看讲解 Linux 丰富的历史吧），据统计，无论是社区参与、代码提交行数，还是企业参与、收入的影响，都以惊人的速度上升。举个例子，在2015年8月份举办的北美 LinuxCon 会场，Linux 基金会介绍说，仅仅是旗下的子项目就有六千四百万行代码的提交，这并没有包括 Linux 本身！这些提交来自成百上千的独立的贡献者，从学生到服务于公司的工程师，据粗略的估价，这些代码的软件是已经超过50多亿美元的软件项目。&lt;/p&gt;

&lt;p&gt;虽然目前开源已经深入人心，但是我们这里要探讨的更加的耐人寻味，因为开源已经不再仅仅是指传统意义上的将代码仓库公开访问，以及以某种开源许可证来分发。开源还意味着由开放治理和合作基金会来管理，使得来自世界各地的开发人员能够协同起来，一起解决来自围绕云计算的挑战：从基础设施服务，到平台、应用的打包，乃至日益扩展的 Web 产品的交付和运维。&lt;/p&gt;

&lt;p&gt;这场开源的革命改变了人们的看法，也让企业开始思考自己的软件产品应该如何开发，尤其是企业为其用户提供云计算的解决方案时，这一影响更加的凸显。我们发现在这个新的开放的时代，它本身就是在培养一种开放的思维以及开放的合作，目标是那些在自己的企业中已经习惯于封闭开发的大量的有经验的开发者们，而且，我们现在越来越多的软件的设计使用开放的原则，就云计算具体来说，企业传统的做法就是“自己滚起来”。我们称这个新的时代为：精心布局的开源。&lt;/p&gt;

&lt;h2 id=&#34;开源-历史回顾:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开源：历史回顾&lt;/h2&gt;

&lt;h3 id=&#34;开源是什么:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开源是什么？&lt;/h3&gt;

&lt;p&gt;为了能够充分的讨论开源这个主题，我们首先需要做的是先澄清此一名词的概念。首先我们会定义一个基准，然后，我们回顾开源的历史，它是如何出现的？为什么会出现？在此过程，我们会遵循在多个行业的开发过程和软件领域中，以成熟的、可行的、有一定价值的组件来说明问题。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;N.B.: Open 这个词，确实是最近几年变化非常大的一个词，近来还读了另外一篇文章&lt;a href=&#34;http://firstmonday.org/ojs/index.php/fm/article/view/6360/5460&#34;&gt;Fifty shades of open&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先，开放源代码促进会的&lt;a href=&#34;http://opensource.org/definition&#34;&gt;开源的十个定义&lt;/a&gt;对于我们理解起开源是非常有意义的。其中一个至为重要的真相就是说能够访问源代码是必要的！但是仅仅是源代码开放就说它是开源软件是远远不够的。正如开源促进会所澄清的，能够访问源代码仅仅是入门级，需要进一步的能够再次分发软件，－原有的和修改过的－以及删除了一些代码的情况所造成的不同，乃至于不同的人们，如用户和开发者。最有价值的或者是一文不值的开源项目在多个方面都会有摩擦，如代码访问、代码共享、以及自由的使用和分发，允许任何人和任何组织去轻易使用和修改。&lt;/p&gt;

&lt;p&gt;这就是 OSI 的定义所强调的一个关键的点。虽然有非常多的可用的开源项目，只是简单的将源代码放在了互联网上，其实这是远远不够的。特别注意的一点就是，很多的开源项目所使用的许可证使得很多的商业公司是无法参与进去的。这么做的后果就是限制了一些开发者，因此，项目就需要更长时间来获得增长乃至成功。举例，某个项目要求所有基于其下的源代码也必须再开源，这就意味着此许可证强制商业公司所开发的增值（可能是商业化的）必须是是自由可用的。对于一部分公司来说，显然是接受不了这样的许可证的。那些最为成功的开源项目都是实现了各式各样的人们来参与到项目中来，并且会鼓励采用贡献者到技术，而不是去强制限制什么。&lt;/p&gt;

&lt;p&gt;除了能够访问到软件的源代码以及有权利去修改它之外，其实开源项目真正的价值并非代码库本身，开源项目真正的价值在于能够在更加广阔的范围很多人为了同样的目标一起协作形成的社区。一位形单影只的开发者，即使是一家单一的公司，做了一开源项目，或许还有点实际的用处的，但若是没有更多的参与者来改进他的代码库的话，项目很快就会变黄。众人抬柴火焰高，有更多的人手来投入时间和资源来让软件更好的测试、更好的文档、更加灵活的处理错误、添加更多的功能，从而满足用户的需求。原作者可能没有注意到全部，但是开源真正的力量在于感兴趣的人们花时间和专业技能来共同完善它，使之更快的成熟可用，甚至有些功能会超越原作者的意料。&lt;/p&gt;

&lt;h3 id=&#34;大众化和商业化:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;大众化和商业化&lt;/h3&gt;

&lt;p&gt;虽然我们可以肯定的说，现代的 GNU／Linux 和自由软件基金会是推动着开源时代来临的力量来源，从而让软件从受企业青睐、各种专利、以及过去的闭源的专有系统的反面的转变。但还是有必要回顾一下开源软件在整个计算机历史的时间线上的位置的。&lt;/p&gt;

&lt;p&gt;在20世纪5、60年代，很多早期的计算系统都是来自于IBM、DEC、以及其它一些学术界、研究机构合作开发的，甚至还有一些政府部门的参与。这就导致最初的操作系统软件和其它关键的软件组件假设是可以在用户和开发者之间进行共享的资源，在计算机的历史上，就这一点可谓是惊人的重复。早期的计算机系统供应商交付他们的硬件的时候，会顺带将全部的软件的源代码一起交付，这其中包括了可能需要修改以及构建软件的工具。拿 IBM 701 大型机来说吧，这种特殊的源代码共享的方式，直接导致 SHARE 用户组以及研讨会持续了几十年！SHARE 是一个充满活力的社区，系统程序员和用户一起分享他们各自所遇到的问题，然后共享代码，即那些修复问题之后增加或变更的代码。&lt;/p&gt;

&lt;p&gt;那个时候没有高带宽网络的普及，让人们能够在全世界范围内轻松的沟通，几十年以后才实现了。但是，这就是现在开源运动的根源：一个协作的社区，共享解决方案、源代码、以及专业的知识，而无须考虑专利权、许可收入、各种金钱的收入。&lt;/p&gt;

&lt;p&gt;好吧，让我们还是快进吧，GNU 项目的创立以及自由软件的想法从 Richard Stallman 头脑中出现的时间是20世界80年代，没有过多久，Linus Torvalds 在1991年开始了 Linux 内核的撰写。这些&lt;a href=&#34;http://lijiangsheng1.github.io/posts/opensource/milestones_in_free_and_open_source_software_history/&#34;&gt;里程碑的事件&lt;/a&gt;，究其原因，有连接全球的越来越方便的网络、通过电子邮件来进行大量的沟通、早期的原始网站、放置代码仓库的 FTP 服务器，所有的这些组合在一起，促使新的开发者们加入到开源运动的大潮中来。Linux 和 GNU 项目的各种组件为开源活动提供自由的底层，参与到开源所需要的所有的必要的工具——编译器、编辑器、网络客户端、以及脚本语言，都可以在一个单一的自由使用的操作系统中获得，这一明显的降低门槛的现象，导致只要拥有一台个人电脑就可以加入到开源的事业中来。&lt;/p&gt;

&lt;p&gt;就在90年代中期众多的参与者加入进来之后不久，此草根的开源运动中开始出现了一些尝试盈利的商业公司，如—— RedHat、SuSE、VA Linux、Netscape（很快变为 Mozilla）、以及 MySQL AB等等。不仅仅是这些新成立的开源公司，而且那些大型的企业很快也看到了开源开发模式的价值，并且也积极的参与到开源社区中来，并且鼓励员工全职为“上游”做开源的工作。IBM 就是在早期采用这一策略的大公司之一：在1998年成立了 IBM Linux 技术中心，雇佣 Linux 内核专家，以及培养内部员工积极的参与到 Linux 内核和其它上游的项目中，目标是让 Linux 能够在所有的硬件类型上运行，且能够支撑IBM 中间件产品，IBM 专门为其下受欢迎的企业级产品—— DB2 和 WebSphere 开发了 Linux 的版本，甚至是过去专门面向大型机的软件如 CICS 和 MQSeries。更多的大型企业也纷纷效仿：Oracle、HP、SAP、Intel、以及其它公司也开始直接支持 Linux，让他们等软、硬件开始支持 Linux 操作系统。开源不再仅仅是自由软件运动的“次文化的产物了”（因为他们有时会被人嘲笑）；它现在已经壮大，是几十亿的市场了。&lt;/p&gt;

&lt;p&gt;相比于早期的企业参与到开源的那些日子，人们使用开源软件和专有软件或解决方案的混合，是一个从最初的忐忑不安到慢慢的适应的过程。但是在今天，你很难找到没有使用开源软件的地方，从移动设备、到嵌入式控制系统、再到企业级数据中心解决方案，开源软件的大众化和商业化的浪潮在我们写这篇文章的时候仍然在加速发展。这一点在云计算更加显得特别，Linux 操作系统让 web 扩展的计算资源成为可能，很多的开源项目也是云计算的基石——从 Hypervisor 到基础设施管理，再到部署，乃至应用程序层的框架。这些项目以及其背后的社区都是响当当的角色。其实，它们之中多数是通过基金会的所创建的开放治理社区。但是，在我们要谈开放治理之前，我们还需要交代一件事，那就是开源将业界瓦解的历史。&lt;/p&gt;

&lt;h3 id=&#34;瓦解:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;瓦解&lt;/h3&gt;

&lt;p&gt;不管它们是否能够理解，当下大多数的消费者都在使用开源软件。即使消费者仅有一点点的技术意识，也会在不知不觉中受益于开源。这些最终用户获益的最大的来源就是通过面向消费者的设备实现的，从 GPS 单元、到家庭无线路由器、再到诸如 Roku 和 Chromecast 这样的流设备。作为开源项目最好的案例－Android ，每天全球有几十亿用户通过智能电话和平板电脑在使用它。即使是在个人电脑上的商业操作系统之中，人们也在使用诸如 Firefox 和 Chrome 这样的开源项目，而且是与日俱增。让我们从个人用户往后推点，看看托管供应商，Apache web 服务仍然是 web 服务器的老大，尽管现在有了新的竞争对手－Nginx，但是 Nginx 依然一款开源的项目。在 Web 的内容方面，我们必须得提一下非常流行的内容管理系统 WorkPress，开源的内容管理平台，每天承载着上百万的博客提交和撰写，其中多数的人们对于平台之后运行的开源一无所知。&lt;/p&gt;

&lt;p&gt;基于这样一个常识－开源软件几乎渗透于软、硬件的各个系统的层次！让我们回顾一下在过去的15年，开源是如何逐个瓦解各个关键领域的。&lt;/p&gt;

&lt;h3 id=&#34;服务器操作系统:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;服务器操作系统&lt;/h3&gt;

&lt;p&gt;在 Linux 到来之前，服务器操作系统是被 Windows 和一系列的商业 Unix 所瓜分的。即使是在 Linux 刚诞生后的早期，企业界的客户仍然是不愿意采用这个羽翼未丰的操作系统，那怕它是“免费的”。当然，后来所发生的事情就是，Linux 的生态系统迅猛成长，一些公司开始提供企业级的发行版以及相应的支持，市场的份额也迅速的发生了变化。在2007年底，IDC 调查称，Linux 终于在单一季度内打破了 20亿美元的瓶颈，已经是所有服务器收入的12.7%。在2012年这个数字逼近17%，但是到了2012年第一季度，Linux 已经占据服务器市场的20.7%，这已经超过了 Unix 的18.3%：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在八月份举行的 Linux 基金会研讨会上，IBM 副总裁 Brad McCredie 大声疾呼，这是 Linus Torvalds 在20年前创建内核项目是绝对没有想到过的事情：&lt;/p&gt;

&lt;p&gt;他说道&lt;a href=&#34;http://arstechnica.com/information-technology/2013/10/linux-is-king-nix-of-the-data-center-but-unix-may-live-on-forever/&#34;&gt;&amp;ldquo;在服务器操作系统这块市场中，Linux 已经超越了 Unix&amp;rdquo;&lt;/a&gt;！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;让我们将视野调回到超级计算机上，我们可以非常明显的看到这块从 Unix 向 Linux 的转变。如下图所示，请注意，从2000年到2010年 Linux 占有 TOP500 超级计算机的操作系统份额从不到5%增长为接近90%！非常明确的一点就是，开源的操作系统为研究者和硬件设计者们带来强大的力量－对硬件加速功能的快速创新、自我定制设备驱动程序、和加强内核技术以便快速的看到原型、得到基准、然后来提高高性能计算的负载。顺带提及一点的，就是 IBM 也在 Linux 的投入上加大力度，开始让 POWER 架构 和 z system 大型机平台支持 Linux，为其企业用户提供一体的服务，包括传统的强大的硬件以及 Linux 的灵活。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/Operating_systems_used_on_top_500_supercomputers.svg/1000px-Operating_systems_used_on_top_500_supercomputers.svg.png&#34; alt=&#34;server os&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在近期2014年底的报告中，IDC 继续报到了 Linux 每年的收入和服务器出货量。但看 Linux 2014年的世界范围内的出货量一项，Linux 的份额就达到了40%，以每年16.4%的速度增长，比它情况好的仍然是微软的 Windows，占有59％，同比下降4%。比较有趣的一点是，不看世界单看美国在2014年的出货量的话，Linux 的增长率和 Windows 是很接近的。&lt;a href=&#34;http://www.idc.com/getdoc.jsp?containerId=256350&#34;&gt;分别是48.7比50.3%&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;虽然我们看到的是 Linux 在服务器操作系统这块市场的破坏性的成长，但是伴随着它的成功，它同时也打开了其它无数的开源的市场。我们还会看到，值得尊敬和长期坚守的开源项目在世界范围的被广泛使用。&lt;/p&gt;

&lt;h3 id=&#34;web-服务器:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;web 服务器&lt;/h3&gt;

&lt;h3 id=&#34;移动设备:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;移动设备&lt;/h3&gt;

&lt;h3 id=&#34;虚拟化:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;虚拟化&lt;/h3&gt;

&lt;p&gt;在1999年 VMware WorkStation 出现之前，软件 Hypervisor 早已存在了好多年了，但是是作为那些非常昂贵的企业服务器的一个部分存在的，即那些如 IBM、HP、以及 Sun 的大型机，工作在这里的工程师们从来没有想过有谁能够改变他们的职业生涯。然而，当 VMware WorkStation 出现以后，这一切都改变了。在任意的笔记本或个人电脑上的 Windows 系统中可以看到 BIOS 的启动！这是多么的令人惊奇和兴奋！在接下来的十多年，虚拟化都是炙手可热的技术点：不仅仅是因为它能够轻松的将原来物理服务器转换为虚拟机，使整个的应用更加的容易备份、配置和迁移，还有它能够在同一台服务器上将大型的不同的负载完全的隔离起来的全新方法，而这是数据中心运维模式的巨大转变。&lt;/p&gt;

&lt;p&gt;从VMware 发布 WorkStation后，没过多久，开源社区在虚拟化这一领域也有了新的突破。Xen Hypervisor 在2003年横空出世，它为Linux提供了半虚拟化的内核；加上 QEMU 模拟器软件的搭配，形成了完善的虚拟化解决方案，而且它还在不断的发展，新的功能和特性与日俱增，如提供非 X86 架构，例如 Power 架构，如 ARM。或许读者你对老牌的公有云提供商 亚马逊 web 服务（AWS）非常的熟悉，这家公司就是在2006年开始为用户提供虚拟化的计算能力的，但是你可能不会知道，AWS 运行虚拟机使用的技术就是 Xen Hypervisor！&lt;/p&gt;

&lt;p&gt;在开源界还有另外一款 Hypervisor，在十多年前，一家名叫 Qumranet 的以色列创业公司，开发了一款基于硬件虚拟化的 Hypervisor，它就是后来大名鼎鼎的 KVM。利用 Intel VT-x（或 AMD－V）的硬件辅助虚拟化技术。KVM 在2007 被合并到 Linux 内核；2008年红帽又将 Qumranet 收购；在那之后，KVM 迅速崛起，很多发行版都开始支持它，成为了主流的 Hypervisor，而且也是很多企业级 Linux 的虚拟化产品，诸如 红帽企业级虚拟化（RHEV）、IBM 的 PowerKVM等。（PowerKVM 是基于 IBM Open Power 硬件平台的，操作系统为 Linux）。&lt;/p&gt;

&lt;h3 id=&#34;云计算:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;云计算&lt;/h3&gt;

&lt;p&gt;软硬件的虚拟化技术的成熟是云计算之所以能出现的关键，从近几年来看，这是一个快速创新的领域，并且是各种投资市场所青睐的对象。几乎所有的厂商，包括硬件和企业 IT 均竞相在私有云、公有云、以及混合云寻找机会和作出变革。&lt;/p&gt;

&lt;p&gt;尽管在云计算这块依然有专有的厂商，但是我们在今天所看到的是，有无数个开源项目在这个领域扮演着重要的角色，并展开了整个云计算的创新。而且那些专有厂商也开始往开源这边倾斜，有时候在纯粹的开源项目和专有之间并没有那么清晰的界线。正如我们看到一直在 IT 市场上扮演专有厂商的微软近来也开始拥抱 Linux，称他们在 Azure 云中可以托管 Linux 虚拟化，无独有偶，微软近来还投入人力到 Docker 这个开源项目的上游社区中，试图将容器技术带入到 Windows 服务器版和 Azure 云中。&lt;/p&gt;

&lt;p&gt;从本质上说，正如 Cloud Foundry 基金会的执行总监 Sam Ramji 最近的结论：“开源已经赢了！” 现在想从任何一家云计算厂商中找到没有开源项目的组件，那真是太难了。无论是 hypervisor、托管操作系统这个层、还是应用程序的运行层、如 Node.js、PHP、Ruby、Python 等开源项目的例子。&lt;/p&gt;

&lt;p&gt;我们今天所看到是开源的复兴！其中，很多围绕云计算的关键活动和创新都是通过开源社区和它们各自的基金会来进行的。有三个社区值得我们拿出来仔细的研究，因为它们是对大型的 IT 企业的 IaaS 和 PaaS 实现产生了非常大的影响，即 OpenStack、Cloud Foundry、以及 Docker，这三家均拥有庞大的开源社区力量并且仍然在快速的增长，每年所举行的研讨会都有成千上万的人参加，有着足够的聚光度，媒体纷纷报道，而且还有来自所有的大型 IT 企业作为合作伙伴和支持者。在下文的 &lt;strong&gt;开放治理：基金会模式&lt;/strong&gt; 中我们将开始探讨基金会模式作为开源振兴的关键点来切入，看它是如何影响我们前面所提到的这些社区以及历史上大型的开源项目的。&lt;/p&gt;

&lt;h2 id=&#34;开放治理-基金会模式:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开放治理： 基金会模式&lt;/h2&gt;

&lt;h3 id=&#34;超越开源:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;超越开源&lt;/h3&gt;

&lt;p&gt;我们已经看到开源不再是被孤立的集体或与世无争的了：开源的商业化和普及化引来了一些公司和大企业的投资和参与。但随之而来的问题就是，在这些项目中商业化和社区的兴趣之间的冲突日益的计划，尽管开源有太多精明的参与者。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;在开源和商业利益的十字路口，问题日益严峻的是有关权威、真实性和文化的问题。
&amp;ndash;&lt;a href=&#34;http://www.informationweek.com/strategic-cio/it-strategy/three-pillars-of-open-source-governance/a/d-id/1318585&#34;&gt;Nathen Harvey, Information Week&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nathen Harvey 在 &lt;strong&gt;Information Week&lt;/strong&gt; 中的文章中指出了三个问题：“项目应该由商业的赞助商驱动还是外围的贡献者驱动？商业利益是否应该凌驾于社区的意愿之上？该如何以及在哪里为商业实体和开源社区之间划上一个明确的界线？”&lt;/p&gt;

&lt;p&gt;这三个问题确实是异常的尖锐，回答起来就显得非常的关键，但通过基金会的模式，开放的治理可以解决大多数的问题。&lt;/p&gt;

&lt;p&gt;不过，首先还是让我们来了解一下开源软件世界的基金会的历史和崛起，这将更加的有助于我们的理解。&lt;/p&gt;

&lt;h3 id=&#34;基金会的崛起:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;基金会的崛起&lt;/h3&gt;

&lt;p&gt;让我们先来看几个较为著名的基金会，以及在特定社区所扮演的角色。通过对这些基金会的快速遍历，希望可以更好的理解他们，看他们如何通过开放基金会的模式来分享愿景以及是如何开展工作的。&lt;/p&gt;

&lt;h4 id=&#34;apache-软件基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Apache 软件基金会&lt;/h4&gt;

&lt;p&gt;Apache 基金会（ASF）创立于1999年，创立时主要的工作时围绕 Apache HTTPD web服务的项目进行开发、资金和治理的协调工作。发展到今天，ASF 已经是世界上最为著名和成功的托管开源项目的基金会之一了，在它的管辖下有超过300多个项目。&lt;/p&gt;

&lt;h4 id=&#34;linux-基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Linux 基金会&lt;/h4&gt;

&lt;p&gt;Linux 基金会在2007年成立，由原开源开发实验室（OSDL）和 自由标准协会（FSG）合并而成。目的是提供发行版中立的发展和加强 Linux 操作系统及其相关的技术。据其&lt;a href=&#34;http://www.linuxfoundation.org/about&#34;&gt;官方网站&lt;/a&gt;的说法：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Linux 基金会旨在保护和激励自由的理念，通过 Linux 开发来加强合作。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;linux-基金会合作项目:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Linux 基金会合作项目&lt;/h4&gt;

&lt;h4 id=&#34;cloud-foundry-基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Cloud Foundry 基金会&lt;/h4&gt;

&lt;h4 id=&#34;开放容器促进会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开放容器促进会&lt;/h4&gt;

&lt;h4 id=&#34;node-js-基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Node.js 基金会&lt;/h4&gt;

&lt;h4 id=&#34;云原生计算基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;云原生计算基金会&lt;/h4&gt;

&lt;h4 id=&#34;openstack-基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;OpenStack 基金会&lt;/h4&gt;

&lt;h4 id=&#34;其它开源的基金会:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;其它开源的基金会&lt;/h4&gt;

&lt;p&gt;限于篇幅和时间关系，我们无法做到涵盖所有的开源基金会，以及他们所支持的开放管理和相关的流程，以及围绕和商业的合作等等。但是，仍然有一些事值得我们为之写上他们的名字的，正式因为他们，才能够让整个的开源更加的健康。他们有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自由软件基金会（FSF）&lt;/li&gt;
&lt;li&gt;Creative Commons&lt;/li&gt;
&lt;li&gt;Eclipse 基金会&lt;/li&gt;
&lt;li&gt;Internet Systems Consortium (ISC)&lt;/li&gt;
&lt;li&gt;Mozilla 基金会&lt;/li&gt;
&lt;li&gt;开源促进会（OSI）&lt;/li&gt;
&lt;li&gt;软件自由法律中心（SFLC）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;还有我们无法在这里一一列出的，他们都在相应的开源项目和促进中扮演着各自的角色，尤其是在商业和独立兴趣之间的平衡。&lt;/p&gt;

&lt;h3 id=&#34;其它-的开源-开放标准:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;“其它”的开源：开放标准&lt;/h3&gt;

&lt;h3 id=&#34;开放治理-合作的重要性:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开放治理：合作的重要性&lt;/h3&gt;

&lt;h4 id=&#34;开放云的合作:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开放云的合作&lt;/h4&gt;

&lt;h4 id=&#34;通过开放治理成功合作:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;通过开放治理成功合作&lt;/h4&gt;

&lt;h3 id=&#34;案例-封闭标准以及私有的api:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;案例：封闭标准以及私有的API&lt;/h3&gt;

&lt;p&gt;在本小结中，我们来简要的看两个反例，这绝对是开源和开放标准治理模式的反其道而行之道典范，也是真正的开放协作的云项目失败的典型。&lt;/p&gt;

&lt;h4 id=&#34;封闭标准-云基础设施管理接口:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;封闭标准：云基础设施管理接口&lt;/h4&gt;

&lt;h4 id=&#34;私有-api-eucalyptus:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;私有 API：Eucalyptus&lt;/h4&gt;

&lt;p&gt;Eucalyptus 是在2008年就发布的一款开源项目，那时还是第一款 IaaS 平台的开源版，在当时的一段时间，还算在云计算社区，获得了一定的发展。但是，现在再看，Eucalyptus 在社区几乎无人问津，在2014年被当时还没有拆分的惠普收购。我们无法得知为何 Eucalyptus 在 IaaS 项目中失败的全部原因，但是我们从一些事情上是可以看出一些端倪的。&lt;/p&gt;

&lt;h3 id=&#34;案例-开源构建的开放云:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;案例：开源构建的开放云&lt;/h3&gt;

&lt;h4 id=&#34;openstack:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;OpenStack&lt;/h4&gt;

&lt;h4 id=&#34;cloud-foundry:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Cloud Foundry&lt;/h4&gt;

&lt;h4 id=&#34;docker:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;Docker&lt;/h4&gt;

&lt;h3 id=&#34;案例-开放基金会扩展了云的协作:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;案例：开放基金会扩展了云的协作&lt;/h3&gt;

&lt;h4 id=&#34;开放容器促进会-1:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;开放容器促进会&lt;/h4&gt;

&lt;h4 id=&#34;云原生计算基金会-1:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;云原生计算基金会&lt;/h4&gt;

&lt;h3 id=&#34;请在开放云中站稳您的脚跟:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;请在开放云中站稳您的脚跟&lt;/h3&gt;

&lt;h3 id=&#34;总结:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;我们深信开放云的未来就是将开源精心布局。&lt;/p&gt;

&lt;h4 id=&#34;作者简介:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;作者简介：&lt;/h4&gt;

&lt;h5 id=&#34;philip-estes-https-www-oreilly-com-people-6e78b-philip-estes:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;&lt;a href=&#34;https://www.oreilly.com/people/6e78b-philip-estes&#34;&gt;Philip Estes&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;Philip 在 IBM 开放云技术团队担任高级技术组成员的职位，目前代表 IBM 在 Docker 开源社区，亦是 Docker 的核心维护者。Philip 还和 IBM 的产品团队以及客户管理一起共事过，将开源的云技术转化为实际的产品、解决方案和 IT 项目。Phil 的成员团队均工作在关键的开源云项目的上游，如 OpenStack、Cloud Foundry、Docker等。在 Phil 加入开放云团队之前，Phil 是 IBM Linux 技术中心的首席架构师。&lt;/p&gt;

&lt;h5 id=&#34;doug-davis-https-www-oreilly-com-people-3ec19-doug-davis:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;&lt;a href=&#34;https://www.oreilly.com/people/3ec19-doug-davis&#34;&gt;Doug Davis&lt;/a&gt;&lt;/h5&gt;

&lt;p&gt;Doug Davis 在 IBM 的开源云和标准部门工作。他在开源和标准这个细分的领域内有超过15年的工作经验，曾经参与过过个现下非常流行的研究标准，诸如 Apache SOAP &amp;amp; Axis、围绕 Web 服务／SOAP 的 W3C 和 OASIS 标准、OpenStack、Cloud Foundry、以及最近参与的 Docker、OCI、和 CNCF。他还是 WSTF 的创始人，WSTF 是基于 Web Service 的内部操作机制的实现，地址是&lt;a href=&#34;http://soaphub.org&#34;&gt;http://soaphub.org&lt;/a&gt;，并有多个企业使用此实现来做他们的实时协作。&lt;/p&gt;

&lt;h2 id=&#34;译者写在后面:e7cbdb8eb7d5cfb8927edb6dff899408&#34;&gt;译者写在后面&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://iaaslee.blogspot.com/2015/03/blog-post.html?view=magazine&#34;&gt;通往开放云指南&amp;ndash;开放云项目简短介绍&lt;/a&gt;，这篇文章是我职业生涯的转折点，令我热血沸腾的开始了自己的创业之路；但是本篇将我的创业梦敲醒，让我回到了残酷的现实！我似乎玩大了，&lt;a href=&#34;http://www.ocselected.com&#34;&gt;开放云精选&lt;/a&gt;的野心是 IBM 开放云团队的目标！ 我看起来似乎毫无希望！没有团队、没有钱，有的就是似乎是人家的想法。接下来该如何走？我陷入了深思。。。。。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VAR Guy 在2008年遴选出来的 top 50开源公司，现在是什么状况？</title>
      <link>http://lijiangsheng1.github.io/posts/opensource/where_they_are_now_top_50_open_source_company/</link>
      <pubDate>Mon, 16 May 2016 23:04:20 +0800</pubDate>
      
      <guid>http://lijiangsheng1.github.io/posts/opensource/where_they_are_now_top_50_open_source_company/</guid>
      <description>

&lt;p&gt;原文链接：&lt;a href=&#34;http://thevarguy.com/open-source-application-software-companies/var-guys-top-50-open-source-companies-where-are-they-now&#34;&gt;The VAR Guy&amp;rsquo;s Top 50 Open Source Companies: Where Are They Now?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;N.B.: 可能原网站的内容已经无法访问，不知是何缘故。或许用 Google 能找到其它的转载，请读者自行处理。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在大约7年前，VAR Guy 发布了&lt;a href=&#34;http://thevarguy.com/var-guy/var-guys-open-source-50&#34;&gt;开源50强&lt;/a&gt;的报道，报道中谈及的都是当年在开源公司的先行者，这几年，开源界早已发生了翻天覆地的变化，是时候将他们拿出来再捋一捋了。看看他们现在都过得怎么样？&lt;/p&gt;

&lt;p&gt;先声明一点，这里列出来的过去的50强开源公司（按字母顺序），也在一定程度上反映了新的趋势－诸如云计算、移动、大数据、物联网、容器以及&lt;a href=&#34;http://thevarguy.com/open-source-application-software-companies/was-2015-year-when-open-source-software-finally-won&#34;&gt;已经被大众广泛认可的开源&lt;/a&gt;。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.acquia.com/partners&#34;&gt;Acquia&lt;/a&gt;：如果聪明的读者您对于 Wordpress 的认识不止于其就是开源中唯一的 CMS 的话，就应该去关注下这家公司。Acquia 是一家基于 Drupal 交付商业的支持，拥有非常活跃的商业伙伴。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.actuate.com/home/&#34;&gt;Acutate&lt;/a&gt;: 致力于数据分析的公司，提供诸如数据可视化、客户通信管理等，在过去的几年颇受大数据解决方案的演化影响。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.alfresco.com/partners/&#34;&gt;Alfresco 软件有限责任公司&lt;/a&gt;：仍然标榜自己是替代商业内容管理的开源方面的领导者，据报告称，其拥有1800个客户、1千一百万用户、70亿的文档，并指出与2012年相比，业务翻了一番。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.astaro.com/&#34;&gt;Astraro 公司&lt;/a&gt;：一度将自己定位为开源实现的统一威胁管理系统（UTM），现在则被&lt;a href=&#34;http://www.sophos.com/&#34;&gt;Sophos&lt;/a&gt;完全收购，Sophos 是一家面向消费者的安全和反病毒厂商。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.canonical.com/&#34;&gt;Canonical&lt;/a&gt;：在2012年的时候，我们非常的想知道作为重要的 Linux 供应商之一，在云计算越来越重要的时候，选择在移动领域发力。过去了这几年，事实证明了它的路没有错。Canonical 目前除交付传统意义上的Linux操作系统之外，还交付平板电脑和智能手机操作系统，而且它还努力的去适应物联网，而对于物联网来说，我们也真诚的希望它能够有所突破。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clearcenter.com/&#34;&gt;Clearcenter&lt;/a&gt;: 现在在走超融合基础设施和混合计算路线，通过为复杂数据中心交付中心化的管理平台来实现这一目的，即当下流行的云计算、混杂着传统遗留的系统，ClearCenter 是比较擅长这个。&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:9fedda20bd274b70d4a929427727e603:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:9fedda20bd274b70d4a929427727e603:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://cleversafe.com/&#34;&gt;Cleversafe&lt;/a&gt;：2004年成立的存储公司，一度在开源市场上做的风生水起，但是在2010年9月份突然改变了自己的方向，自那时起，他们将开源相关的内容也从网站上撤离了。如今的 Cleversafe 将自己描述为一个解决大数据存储问题的公司，声称可以支持数百petaybtes的横向扩展。但是已经很少关心开源了。&lt;/li&gt;
&lt;li&gt;Compiere Inc.:&lt;a href=&#34;http://www.consona.com/news/compiere-acquisition.aspx&#34;&gt;consona收购了 Compiere&lt;/a&gt;，是2010年成立的一家专门提供开源 ERP 的公司。旧的 Compiere 网站在2012年的时候，还是可以访问的。但是在今年（2016）已经从网络上消失了。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://continuent.com/&#34;&gt;Continuent&lt;/a&gt;有限责任公司： 在2014年被&lt;a href=&#34;http://blogs.vmware.com/vcloud/2014/10/vmware-acquires-continuent.html&#34;&gt;VMware收购&lt;/a&gt;，此公司的技术目前是交付数据库的复制，以及为&lt;a href=&#34;http://www.vmware.com/products/continuent/&#34;&gt;VMare 的产品&lt;/a&gt;提供灾难恢复。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.digium.com/&#34;&gt;Digium&lt;/a&gt;有限责任公司：Asterisk 的主力推进者。Asterisk 可是大名鼎鼎的 IP BPX 开源实现。在2012年的时候，VAR Guy就想知道“Digium难道永远不会在云中启动自己的 Asterisk 项目？”，答案是否定的。它现在做了基于云的呼叫解决方案，名字叫做： Switchvox。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.dotnetnuke.com/Partners/Partners-Overview/Overview.aspx&#34;&gt;dotnetnuke&lt;/a&gt;公司：过去一直是在微软的 .Net 环境下提供 Web 内容管理平台。现在则把精力转到了 web 设计服务上来了。仍然坚称自己是“DotNetNuke 开源项目的大管家”，其&lt;a href=&#34;http://www.dotnetnuke.com/Partners/Partners-Overview/Overview.aspx&#34;&gt;合作伙伴的名单&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;eBox 技术公司：公司在2010年8月将名称修改为&lt;a href=&#34;http://www.zentyal.com/partners/&#34;&gt;Zentyal&lt;/a&gt;。Zentyal 仍然致力于为中小型企业提供 Linux 服务，以及基于云的邮件系统和 Groupware，当然仍然是微软 Outlook 的一个替代。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.enterprisedb.com/&#34;&gt;Enterprisedb&lt;/a&gt;：依然将自己定位于 PostgreSQL，一款 Oracle 数据库的开源替代实现。该公司通过 SaaS 服务和云&lt;a href=&#34;http://www.enterprisedb.com/partner-programs&#34;&gt;渠道合作&lt;/a&gt;盈利。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eracks.com/&#34;&gt;eRock 开源系统&lt;/a&gt;：依然一路高歌猛进，提供开源的机架式服务器和桌面电脑，依然高调标榜自己是开源的专家。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.eucalyptus.com/&#34;&gt;Eucalyptus 系统&lt;/a&gt;：一家开源的云计算公司，在2012年融到了3000万美金的一轮资金。我们满以为它会利用这笔钱很好的和另外的云平台&lt;a href=&#34;http://www.openstack.org/&#34;&gt;OpenStack&lt;/a&gt;和 Citrix &lt;a href=&#34;http://www.cloudstack.com/&#34;&gt;CloudStack&lt;/a&gt;一决高下了，但是该公司似乎是针对专注于和亚马逊 AWS 的兼容上了，被惠普收购。现在很少能够听到它了。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.fluendo.com/&#34;&gt;Fluendo SA&lt;/a&gt;:仍然耕耘在开源的多媒体解决方案。现在是 Linux 基金会的成员之一了。&lt;/li&gt;
&lt;li&gt;GroundWork Open Source（GWOS）：并没有其简短的名称&lt;a href=&#34;http://www.gwos.com/&#34;&gt;Groundworks 公司&lt;/a&gt;有名气，依然聚焦于 IT 监控解决方案。但是公司已经意识到“DevOps”的新趋势了。它并不怎么提倡和合作伙伴的积极互动，但是可以查到他们的&lt;a href=&#34;http://www.gwos.com/company/partners/&#34;&gt;合作伙伴&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.actian.com/ingres-becomes-actian&#34;&gt;Ingres&lt;/a&gt;公司：一家开源数据库提供商，后改名为&lt;a href=&#34;http://supportservices.actian.com/&#34;&gt;Action&lt;/a&gt;，在2011年9月的时候，业务变更为在云计算平台上做消费者的 app。在品牌变更后三个月他们还更换了 CEO。时间过得真的很快，2016年的 Action 已经没有什么动静了。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.intalio.com/&#34;&gt;Intalio&lt;/a&gt;有限责任公司:在2012年的时候似乎已经停滞了，那时候，我们很像知道是否能够活下来。事实上也确实又了转变；在2015年的时候，Intalio &lt;a href=&#34;http://www.intalio.com/announcing-everteam-intalio/&#34;&gt;被 Everteam 收购&lt;/a&gt;，依然在做他们的企业内容管理和业务流程管理的组合拳。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ipbrick.com/&#34;&gt;IPBrick&lt;/a&gt;国际：仍然致力于统一通信，我们在2012年观察到，其更加的专注于移动计算和 groupware，但相比以前很少标榜自己是开源的了。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jaspersoft.com/&#34;&gt;Jaspersoft&lt;/a&gt;公司：仍然致力于开源商业智能软件市场的耕耘，但已经向云计算和移动方面开始转移了，目测已经完成。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jumpbox.com/&#34;&gt;JumpBox&lt;/a&gt;有限责任公司：依然在提供麻烦不断的开源服务软件，承诺大家他们的应用已经进入容器时代，（官方网站上说提供“app 不仅仅是 OS”）但是从他的&lt;a href=&#34;http://www.jumpbox.com/partners&#34;&gt;合作伙伴列表&lt;/a&gt;以及网站的其它部分，并未看到任何的更新。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://corp.kaltura.com/partners/&#34;&gt;Kaltura&lt;/a&gt;有限责任公司：依然耕耘在开源的视频平台下，拥有长长的合作伙伴列表。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.knowledgetree.com/&#34;&gt;KnowledgeTree&lt;/a&gt; 有限责任公司：回到2007年，KnowledgeTree 可是当时的开源文档管理系统的世界级的领头羊，今天他们确转向了市场内容管理。并聚焦于和 Slaesforce.com 的整合。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.likewise.com/&#34;&gt;Likewise&lt;/a&gt;软件：致力于认证的管理、安全、以及存储。Likewise 原来所构建的软件是让 Linux、Unix、Mac 等系统到微软到活动目录服务上去认证。EMC 在2012年3月收购了 Likewise，现在则在 EMC 的运营之下很难找到原来公司的蛛丝马迹。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.magnolia-cms.com/&#34;&gt;Magnolia&lt;/a&gt;国际：业务仍然是 web 内容管理系统。现在聚焦于商务和增加了物联网的混合。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mandriva.com/en/&#34;&gt;Mandriva SA&lt;/a&gt;：早在2012年的时候就出现了经营问题，Mandriva 连同和他同名的 GNU／Linux 发行版一同消失在历史的长河中。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mindtouch.com/about/&#34;&gt;MindTouch&lt;/a&gt;:社交让公司重新定位了业务模式，在2010年从开源的软件转向了 SaaS 服务。到现在没有多大的变化。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mulesoft.com/mulesoft-partners&#34;&gt;Mulesoft&lt;/a&gt;: 在2007的时候标榜自己是“开源的基础设施和集成软件的领导供应商”，在2012年变为“在云计算中按需服务中最为广泛使用的用于连接 SaaS 和企业应用的集成平台。”到今天其宣言也跟着进化为公司现在承诺集成“任何的应用、数据源、API、无论是否在云中按需服务”。仍然由许多的合作伙伴。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mysql.com/&#34;&gt;MySQL&lt;/a&gt;：著名的开源关系型数据库，现在属于 Oracle。曾经一度是微软 SQL server 的开源替代，现在也受到来自 NoSQL 的挑战，如 MongoDB。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.novell.com/&#34;&gt;Novell&lt;/a&gt;：在2011年卖给了 Attachmate，然后，Attachmate 又被 Micro Focus 在2014年收购，但是易主归易主，他们仍然坚守&lt;a href=&#34;http://www.suse.com&#34;&gt;Suse Linux 企业版&lt;/a&gt;市场，（以及他们的社区版－&lt;a href=&#34;https://www.opensuse.org/&#34;&gt;OpenSuse Linux&lt;/a&gt;。但愿他们不会错过云计算这个机会。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nuxeo.com/en/partners&#34;&gt;Nuxeo&lt;/a&gt;：仍然致力于他们的开源的企业级内容管理系统。2011年实现了盈利翻番，Nuxeo 最近发布了12家新的 SI 合作伙伴，和9家的技术合作，尽管其网站上仅仅列出了5家。但是仍然有很多客户列表。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.open-xchange.com/&#34;&gt;Open-Xchange&lt;/a&gt;：公司继续其加强其开源的电子邮件和效率的解决方案，为用户提供 OS 套件、托管、以及 SaaS 专业服务，开放性、安全性仍然是他们的卖点。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.openbravo.com/&#34;&gt;OpenBravo&lt;/a&gt;：依然致力于开源的 ERP，2011年收入增长 143%，依然坐拥众多的&lt;a href=&#34;http://www.openbravo.com/partners/&#34;&gt;大客户&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.opengear.com/&#34;&gt;Openear&lt;/a&gt;：仍然提供高级的终端服务，和企业级的远程管理解决方案。只是多了&lt;a href=&#34;http://rethink-iot.com/2016/03/11/opengear-expands-datacenter-network-edge-iot-transition/&#34;&gt;基于物联网的创新&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.pentaho.com/&#34;&gt;Pentaho&lt;/a&gt;:将他们原来在开源方面的经验应用到了大数据的分析上，现在是在传统的内容之上加上了云计算分析和物联网的分析。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.redhat.com/&#34;&gt;红帽&lt;/a&gt; Inc.：此50家列表中最大的赢家，目前还发展势头良好。红帽的业务早已经不再限于提供 Linux 发行版了，现在的产品线非常的齐全，包括 Jboss 中间件、企业级虚拟化、存储产品、以及一系列基于云的解决方案产品。就拿赚钱这事来说吧，红帽在2012年是首家年营业额超过10亿美元的公司，到2016年第一季度这个数字又翻了一番，已达到20亿美金。这就是做对了事情的结果。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.rsmart.com/about-us&#34;&gt;rSmart&lt;/a&gt;：是一家专注于开源管理软件的公司，目标客户是大学校园、基于云平台的用户、或者是移动端的门户校园服务。Guy VAR 在2012年的时候认为这家公司一般般，但是2016年再看的话，好家伙，业务增长迅猛，据称现在全国范围内已经有750,000 的用户了。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.springsource.com/&#34;&gt;SpringSource&lt;/a&gt;:现在是 VMware 的一个部门了，方向仍然是云计算应用程序平台。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://starpound.net/&#34;&gt;StarPound&lt;/a&gt;技术有限责任公司：在2008年时定位自己为一家统一通信公司，现在则转向为基于云计算的呼叫中心和 BPM 提供商。但是业绩平平似乎。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sugarcrm.com/&#34;&gt;SugarCRM&lt;/a&gt; 有限责任公司：仍然有业务增长，而且依然&lt;a href=&#34;http://www.sugarcrm.com/partner/sugarcrm-open-partner-program&#34;&gt;走渠道模式&lt;/a&gt;，重心还是在移动应用方面。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.talend.com/index.php&#34;&gt;Talend&lt;/a&gt;:仍然将自己定位是一家集成的公司，今年在大数据市场通过分布式的 Apache Spark 和 Hadoop 搞得也是风生水起。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.untangle.com/&#34;&gt;Untangle&lt;/a&gt;：一家开源的做安全的公司，在2012年重新定位自己推出了软件的防火墙。在2016年则转向了了网络的监控。且努力的&lt;a href=&#34;http://www.untangle.com/solutions/byod-and-open-wi-fi/&#34;&gt;推动开放的 Wi-Fi&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vyatta.com/&#34;&gt;Vyatta&lt;/a&gt; 有限责任公司：在2007年的时候，Vyatta 将自己定位为一家开放的网络公司，主要是致力于开源的网络操作系统和路由系统，从而对抗市场的龙头 Cisco。在2012年的时候，&lt;a href=&#34;http://newsroom.brocade.com/press-releases/brocade-acquires-vyatta-a-pioneer-and-leader-in-s-nasdaq-brcd-0949599&#34;&gt;被 Brocade 收购&lt;/a&gt;。Vyatta 从此在开源界销声匿迹。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.xandros.com/about.html&#34;&gt;Xandros&lt;/a&gt;公司：绝对的 Linux 专家，一直以来都想通过 Crossover 在 Linux 下运行微软的 Office 系列软件，试图这样为用户提供增值服务，7、8年来是一路走到黑的。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xtuple.com/&#34;&gt;Xtuple&lt;/a&gt;：依然将自己定位于商业的开源公司，专注于业务应用、会计和运营的销售，在开源的 ERP 市场独占鳌头。仍然坚持&lt;a href=&#34;https://xtuple.com/why-open-source&#34;&gt;标榜自己是一家开源的公司&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zarafa.com/&#34;&gt;Zarafa&lt;/a&gt;: 过去是做开源电子邮件平台的。随着公司的发展，渐渐分离出了提供文件共享和在线会议。并在2012年和 ClearCenter（上面 第六家） 达成伙伴关系。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zenoss.com/&#34;&gt;ZenOSS&lt;/a&gt; Inc.：针对物理和虚拟化环境的 IT 运维管理的促进者，过去是在开源方面很努力的，现在则开始加大力度&lt;a href=&#34;https://www.zenoss.com/solution/open-source-vs-enterprise&#34;&gt;推广&lt;/a&gt;他们在基于核心开源的平台之上所做的增值的商业实现部分。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zimbra.com/&#34;&gt;Zimbra&lt;/a&gt;：现在属于 VMware 了。原来是做电子邮件解决方案的，是类似 Microsoft Exchange 的开源替代。现在聚力于在线协作方面。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zmanda.com/&#34;&gt;Zmanda&lt;/a&gt; Inc.: 依然是坚挺的企业级备份和灾难恢复的开源提供商。他们的存储软件现在还整合到了 Google 的云存储中。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;小结:9fedda20bd274b70d4a929427727e603&#34;&gt;小结&lt;/h2&gt;

&lt;p&gt;有多少人能读到这里了呢？这是一个浮躁的时代，快速浮掠、过眼烟云的阅读。谁又会在意你的思考？这是一副令人容易厌烦的又臭又长的列表，但是我们可以总结一些所谓的趋势：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;从2008年以来，在50家公司中有20家是被收购了的。而收购方多数并不是开源的。&lt;/li&gt;
&lt;li&gt;大概有8家公司渐渐的淡出了人们的视线。&lt;/li&gt;
&lt;li&gt;其中有2家公司变更了他们的名称。&lt;/li&gt;
&lt;li&gt;其中有3家公司或倒闭或停止了服务支持。&lt;/li&gt;
&lt;li&gt;在2008年的时候，多数公司聚焦点在于提供按需的解决方案；而2012年的时候，在他们的运营中加入了云计算，或者干脆整个转向了 SaaS。数据分析仍然占着很大的比重。&lt;/li&gt;
&lt;li&gt;根据上述的很多公司来看，物联网确实是大势所趋。至少有4家公司声明提供物联网的产品。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;译者的话:9fedda20bd274b70d4a929427727e603&#34;&gt;译者的话&lt;/h2&gt;

&lt;p&gt;整体而言，此报道做的优点粗糙。但是，话说回来，在没有任何资源的情况下，跟踪这些非致力于互联网的公司，难度确实非常的大。又不能做实地的考察。很多公司的技术评价方面，可以看出作者是外行，并非是计算机或IT专业的人士。没错，作者是一名历史学家。&lt;/p&gt;

&lt;p&gt;这大概也是文章现在无法访问的缘由！&lt;/p&gt;

&lt;p&gt;跨行工作难度确实非常的大！ 此处也可见一般。作者备受争议的那篇&lt;a href=&#34;http://thevarguy.com/open-source-application-software-companies/041715/birth-open-source-was-about-saving-money-not-sharing-code#comment-302681&#34;&gt;At Birth, Open Source Was About Saving Money, Not Sharing Code&lt;/a&gt;，不可为一种全新的见解。&lt;/p&gt;

&lt;p&gt;但本文也让我本人受益许多！有成功有失败，每家公司都有学习的地方！是的，没错，现在依然每天都有标榜开源的公司出现，更何况在21世纪的8年里，还有多少公司没有在这个名单中？看历史就是这样。希望能够看历史来把握未来、以及未来的趋势，如果可能的话，抓住未来趋势的转变。方可致胜。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:9fedda20bd274b70d4a929427727e603:1&#34;&gt;译者注：没有调查过此公司的历史，但是这个看起来很像是软广告。
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:9fedda20bd274b70d4a929427727e603:1&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>自由和开源软件历史上的里程碑：1969～2015</title>
      <link>http://lijiangsheng1.github.io/posts/opensource/milestones_in_free_and_open_source_software_history/</link>
      <pubDate>Thu, 12 May 2016 10:39:17 +0800</pubDate>
      
      <guid>http://lijiangsheng1.github.io/posts/opensource/milestones_in_free_and_open_source_software_history/</guid>
      <description>

&lt;p&gt;原文链接：&lt;a href=&#34;http://thevarguy.com/open-source-application-software-companies/milestones-free-and-open-source-software-history-1969-201#slide-0-field_images-93671&#34;&gt;Milestones in Free and Open Source Software History, 1969-2015&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;题记:cc267de9851301f554ebb623233c0a56&#34;&gt;题记&lt;/h2&gt;

&lt;p&gt;今年是 Linux 内核诞生25周年，非常有必要回顾一下Linux以及相关的开源软件的历史，VAR Guy 斗胆担当起这个责任，以自己的视角切入，回顾这段历史的里程碑：从介绍 Unix 的创建开始到微软拥抱Linux为止。&lt;/p&gt;

&lt;h3 id=&#34;1969年-unix-诞生:cc267de9851301f554ebb623233c0a56&#34;&gt;1969年，Unix 诞生&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://i2.wp.com/alt1040.hipertextual.com/files/2011/10/ritchie-ken.jpg&#34; alt=&#34;unix&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Unix，1969年诞生于 AT&amp;amp;T 贝尔实验室的操作系统，永远也不会是自由或开源的操作系统！但是它的代码被 Unix 社区的 Hacker 们自由的共享着，在20世纪80年代早期 AT&amp;amp;T 将之商业化之前，Hacker 们一直在改进它。也因为此，Unix 成为了自由和开源程序员们试图通过开放代码来复制的操作系统。因此，Unix 为开源奠定了非常重要的基础。&lt;/p&gt;

&lt;h3 id=&#34;1984-gnu-成立:cc267de9851301f554ebb623233c0a56&#34;&gt;1984：GNU 成立&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://i.ebayimg.com/00/s/NTAwWDUwMA==/z/7GsAAOSw5VFWMRP4/$_35.JPG&#34; alt=&#34;gnu&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在1983年的秋天，Richard Stallman ，MIT 人工智能实验室的资深工程师，对于软件闭源日益增长的趋势也越发的不满，于是发起了 GNU 项目。他的目标是仅使用可以自由共享的代码来构建一个 Unix 克隆的操作系统，而且必须永远的公开。绝大多数的 GNU 项目，均是 Stallman 在1984年早些时候开始构建的，它们今天依然处于自由和开源软件生态系统的中心位置。&lt;/p&gt;

&lt;h3 id=&#34;1985年-stallman-创建自由软件基金会:cc267de9851301f554ebb623233c0a56&#34;&gt;1985年，Stallman 创建自由软件基金会&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://www.vn.nl/wp-content/uploads/sites/3/2015/04/a8658015-57d3-4996-80e2-34aad23fcf25_Christophe-Ducamp_preview-kopie.jpg&#34; alt=&#34;stallman&#34; /&gt;&lt;/p&gt;

&lt;p&gt;尽管 GNU 项目创建以来，能够提供给人们自由的共享代码库了，但是直到1985年，Stallman 创办了自由软件基金会之后，自由代码的在政治维度上才站稳了脚跟。通过帮助和资助自由软件的开发，FSF 在过去的30年为 GNU 项目以及其它自由软件项目提供了重要的基础。它还是帮助自由代码和具有相同目标的社会和政治之间的纽带。&lt;/p&gt;

&lt;h3 id=&#34;1991-bsd-net-2-发布:cc267de9851301f554ebb623233c0a56&#34;&gt;1991, BSD Net/2 发布&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://c1.staticflickr.com/7/6025/6011128252_0d01c3a551_b.jpg&#34; alt=&#34;bsd&#34; /&gt;&lt;/p&gt;

&lt;p&gt;1991年6月，来自加利福尼亚大学伯克利分校的开发者们发布了一款叫做 Net/2 BSD 的操作系统软件，这款软件是可以自由的重新分发的类 Unix 操作系统。关于 BSD 的开发可以追溯到上世纪70年代，在开始的时候是作为为 AT&amp;amp;T Unix 添加一些增强的功能而发起的，随后在80年代时，AT&amp;amp;T Unix 成为一商业产品，然后，BSD 的团队就开始以自由的 BSD 完全取代 AT&amp;amp;T Unix的工作了，Net/2 是 BSD 的第一个版本，基本上实现了这样一个目的。在1991年的夏天，那时的人们还没有听说过 Linux，而 GNU 的开发人员正忙于努力的创建一个内核。BSD 作为一个免费的类 Uni 操作系统，看起来是一颗冉冉升起的新星！前途无量！然而，在发布以后，由于法律上的麻烦（可以说，许多的条款太过于自由主义），BSD 以及其衍生产品从来都&lt;a href=&#34;http://thevarguy.com/open-source-application-software-companies/062615/open-source-history-why-didnt-bsd-beat-out-gnu-and-linux&#34;&gt;没有获得像 GNU／Linux 那样广泛的追随者&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;1991-同一年-linux-内核现身:cc267de9851301f554ebb623233c0a56&#34;&gt;1991，同一年，Linux 内核现身&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://drop.ndtv.com/albums/GADGETS/techies/linux-edited.jpg&#34; alt=&#34;linux&#34; /&gt;&lt;/p&gt;

&lt;p&gt;1991年8月份，一位名叫 Linus Toravalds，尚在读大学的芬兰学生在新闻组上发布了一份声明，他创建了一个类 Unix 操作系统的自由内核。可当时的 Linus 打心眼都没有想到过他写的这个内核，日后被称之为 Linux ，能够吸引众多的精英来一同开发，更没有想到过这最后成为最为成功和著名的自由与开源软件程序。同 GNU 项目所开发出的工具相结合，Linux 获得了空前的成功。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Z.B.: 其实 GNU 自己也有一个内核的项目，叫做 Hurd，但它从来就没有完成过。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;1995-apache-诞生了:cc267de9851301f554ebb623233c0a56&#34;&gt;1995，Apache 诞生了&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://www.bodenseo.com/images/apache_webserver.png&#34; alt=&#34;apache&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在上世纪90年代早期，Web 渐渐显露峥嵘，但是作为 Web 服务方面的软件还处于封闭、专有的状态。但是在1995年一款软件出现打破了这块铁板。一组由系统管理员组成的开发团队开始协作构建叫做 Apache HTTP 服务器的软件，是基于国家超算应用中心（NCSA）的一款web服务平台，NCSA 后来放弃了他们这款软件的开发人员。Apache 果然顺势而起，没多久就声名鹊起，到1996年的时候，已经占据了 Web 服务器大部分的市场份额。在接下来的几年里，Apache 的开发者们扩大了其支持的平台，支持了更多的由 GNU 许可的软件，当然 Linux 是重中之重。在1999年，成立了 Apache 基金会，旨在为更多的开源软件项目提供监督和帮助。如今的 Apache 已经度过了其17岁的生日，&lt;a href=&#34;http://www.infoq.com/cn/articles/apache-foundation-the-success-of-apache&#34;&gt;以事实证明了它非常的成功！&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;2005-git-的时代来临:cc267de9851301f554ebb623233c0a56&#34;&gt;2005，Git 的时代来临&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://www.atlassian.com/git/images/atlassian-getting-git-right.jpg&#34; alt=&#34;atlassian git&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在上世纪90年代，其中一个让 Linux 连同其它开源项目和 GNU 分离的重要因素就是前者的协作开发是大型的、去中心化的程序员，而后者 GNU 的开发则是在中心化的、较小团队中进行的。在 Linux 最开始的开发过程中协作是通过电子邮件进行的，稍后迁移到了源代码管理（SCM）平台中。Linux 使用的是商业的、叫做 BitKeeper 的SCM一直到2005年，因为平台的所有者称不再为 Linux 提供免费的使用权了，Torvalds 于是写了一款叫做 Git 的SCM工具取代了 BitKeeper。&lt;/p&gt;

&lt;p&gt;从2008年开始，渐渐的出现了一些以Web 的形式托管 Git 代码仓库的平台，如 GitHub。Git 出现推动了开放源代码管理方式，简直是一场革命，它让开发过程前所未有的无限扩展，而且近乎允许让每一个人做贡献！换句话说，Git 将开源编码的开放性带到了更高的高度，可以让任何一个人非常快速的推出一个开源项目，通过 Web 无缝的接受他人的贡献！&lt;/p&gt;

&lt;p&gt;N.B.: 近期，GNU发起了一项关于 Git 托管平台／工具的评测，&lt;a href=&#34;https://www.gnu.org/software/repo-criteria.en.html&#34;&gt;评测标准&lt;/a&gt;，&lt;a href=&#34;https://www.gnu.org/software/repo-criteria-evaluation.html&#34;&gt;评测结果&lt;/a&gt; ，但是颇为遗憾，没有评测&lt;a href=&#34;https://pagure.io/pagure&#34;&gt;Pagure&lt;/a&gt;!&lt;/p&gt;

&lt;h3 id=&#34;2015-微软宣布拥抱-linux:cc267de9851301f554ebb623233c0a56&#34;&gt;2015，微软宣布拥抱 Linux&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;http://www.digi.no/incoming/2015/02/02/microsoft-elsker-linux.jpg1/alternates/h1080/Microsoft%20elsker%20Linux.jpg&#34; alt=&#34;microsoft&#34; /&gt;&lt;/p&gt;

&lt;p&gt;关于微软和自由／开源软件社区的紧张关系，还得从上世纪90年代后期说起，GNU、Linux、以及 Apache Web 服务器，和其它的开源软件，伴随着互联网的崛起而分割了微软的一些市场份额。更有甚者，在2011年当时任微软 CEO 的  Steve Ballmer 称 Linux 为“致命病毒”。但是，在2015年一切都变了。微软的新任 CEO 公开宣称“微软拥抱Linux”（原文是“Microsoft Love Linux”）。在&lt;a href=&#34;http://www.infoq.com/cn/news/2016/04/Microsoft-Linux-strategy&#34;&gt;回顾微软近年来对于Linux和开源的策略&lt;/a&gt;一文中，我总结了一下这几年微软整合开源产品的几件大事件，就可以看出微软这次是动真格的了，尽管来自开源社区的忠实爱好者们&lt;a href=&#34;http://thevarguy.com/open-source-application-software-companies/microsoft-loves-linux-does-linux-love-microsoft&#34;&gt;仍然在怀疑微软的态度&lt;/a&gt; 。&lt;/p&gt;

&lt;h2 id=&#34;作者简介:cc267de9851301f554ebb623233c0a56&#34;&gt;作者简介&lt;/h2&gt;

&lt;p&gt;Christopher Tozzi，The VAR Guy 的自由编辑，从2008年到现在一直担任一些频道的主编。频道有：开源、Linux、虚拟化、SDN，以及容器、数据存储等相关主题。他在华盛顿大学讲授历史课程，他还偶尔会结合这些来写软件的历史。他的新作《 For Fun and Profit: A History of the Free and Open Source Software Revolution, 》即将由 MIT 出版社出版。他的个人主页：&lt;a href=&#34;http://christozzi.com/index.php&#34;&gt;christozzi.com&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;译者点评:cc267de9851301f554ebb623233c0a56&#34;&gt;译者点评&lt;/h2&gt;

&lt;p&gt;其实，类似这样的大事件式的历史叙事方式，我是非常的不喜欢。而且容易被误解。这要回归到我们中学所学的历史课，尽挑大事说，忽略了每一个活生生的个人史。导致多数人都有宏观视野，这一点可以在夏天的街边地摊，随意找个只要有三、两人聚在一起，你在旁边聆听即可，尽是皇帝视野、宏观叙事、人多无力、历朝历代等等。之所以翻译这篇，是因为看到作者是一名历史学家，竟然写了一本关于自由和开源软件的历史书，只希望从他的脉络中找到一些什么。关于 Christopher Tozzi 的文章，我可能还会翻译几篇。若是能拜读了他的书，他的历史叙事又不同于列举里程碑的话，我希望能够翻译，从中学习一些文化、技术、沟通、管理等细节。&lt;/p&gt;

&lt;p&gt;N.B.：似乎有微博上&lt;a href=&#34;http://weibo.com/u/5242649983&#34;&gt;湾区日报&lt;/a&gt;的风格。这究竟是一种什么样的现象？值得深思！有机会的话，应专门写一篇文章解释为什么这么干。不用管这个世界，表达出自己的内心即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>为什么说你的员工应该去为开源做贡献</title>
      <link>http://lijiangsheng1.github.io/posts/opensource/why_employees_should_be_contributing_to_open_source/</link>
      <pubDate>Fri, 06 May 2016 18:33:47 +0800</pubDate>
      
      <guid>http://lijiangsheng1.github.io/posts/opensource/why_employees_should_be_contributing_to_open_source/</guid>
      <description>

&lt;p&gt;英文原文：&lt;a href=&#34;https://blog.codeship.com/why-your-employees-should-be-contributing-to-open-source/&#34;&gt;Why Your Employees Should Be Contributing to Open Source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;译者写在前面的话:fe751cbe31a214529158a041c9ece16b&#34;&gt;译者写在前面的话&lt;/h2&gt;

&lt;p&gt;就&lt;a href=&#34;http://lijiangsheng1.github.io/about/&#34;&gt;我来说&lt;/a&gt;，在职业生涯中，就说服老板参与到开源社区中是非常失败的，甚至于最后均是不欢而散。那么如果当初我也能像作者一样，以平和的心态、严谨的数据、耐心的说服，结果可能会好点。年少轻狂之时，只注重自己的内心世界，认为不懂的可以通过努力去获取，而忘却了这个世界的复杂，他人是否愿意学习？他人也是有许多经历和接受了许多文化、意识形态的。改变自己可以，想要改变别人是不可能的，哪怕是影响都微乎其微。现在的我，看人要谨慎许多，在头脑充血的那一刻，尽可能的去做深呼吸。然后，再以理服人。&lt;/p&gt;

&lt;p&gt;相信这篇文章对于每个热爱开源，对开源充满美好憧憬的年轻人，依然还在为他人打工的有志者。说服自己的老板、或者是为开源尽一份力。是有一定用处的。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;多数老板是不乐意员工在工作时间去为开源做任何的贡献的，他们想不明白为外部的开源项目做贡献如何能够让他们自身以及他们的客户受益？&lt;/p&gt;

&lt;p&gt;只有为数不多的公司会鼓励他们的开发团队去为开源做贡献。所以有很多做开源项目的开发者都是在白天下班之后，但是这样就会经常的熬夜，会对健康造成严重损害的。 这样的话，就将很大一部分优秀的开发者们排除在外了，如有了孩子的父母、或者是家里有正在上学的孩子，这些开发者们就没有时间参与到开源项目中，即使是对所有人都有好处：他自己、其老板、乃至他的客户。&lt;/p&gt;

&lt;p&gt;非常遗憾，老板、员工、以及客户，都没有意识到自己错过的机会。&lt;/p&gt;

&lt;p&gt;多数雇主或老板仍然将软件的开发视为和在墙上涂鸦是一样的。&lt;strong&gt;如果我增加更多的工人，那么完成工作任务的时间就会线性的减少。&lt;/strong&gt; 在某种程度上，这样做是对的，但是它并不适用于软件项目。打造一款软件产品，在整个技术栈区分多个不同的层次，每个层次都需要不同的技术。驾驭复杂的软件取决于团队掌握的知识以及团队成员的相互协作。&lt;/p&gt;

&lt;p&gt;如果一些经理们对于自己的雇员们在日常工作时间为开源做贡献有所担心的话，他们一定是这么考虑的：“为什么我们花钱雇佣工人为他家的墙上涂鸦了呢？” 本文试图解决经理们的这一疑惑。将探讨为什么说让员工们为开源做贡献好处多多－－即使是在日常的工作时间去做这件事。&lt;/p&gt;

&lt;h2 id=&#34;开源可以留住员工:fe751cbe31a214529158a041c9ece16b&#34;&gt;开源可以留住员工&lt;/h2&gt;

&lt;p&gt;开源是一个学习的绝佳之地。每个项目都有各自的结构、工具、特点、和流程。参与到开源项目是最佳学习其内部机理的方式。&lt;/p&gt;

&lt;p&gt;他们使用哪款工具？其它团队是什么样的流程？通过参与开源，工程师们可以深入了解其它的高端项目，而不是等待某些许可方可进行参与。&lt;/p&gt;

&lt;h2 id=&#34;开源对团队有好处:fe751cbe31a214529158a041c9ece16b&#34;&gt;开源对团队有好处&lt;/h2&gt;

&lt;p&gt;如今，很多的商业项目都严重依赖于开源软件。其中一些 Bug 和特殊用例只能在大型的、巨大流量的部署中发生。在这样的情况下，我们需要专家能够及时的修复问题，问题根源的分析只有让对所使用的技术和程序内部有深刻了解的团队去解决，才能更快。他们毋需依赖其它项目的维护者，就可以自行去解决问题。&lt;/p&gt;

&lt;p&gt;一位贡献者（代码提交者）本身就是解决问题的能手，若是能够在团队内部，做到日常的回答其他工程师的小问题，做到为他人提供指导，这样整个团队就可加速成长，进入一个正循环的高效团队，从公司的角度来讲，可提升业务。&lt;/p&gt;

&lt;h2 id=&#34;有助于员工的培训发展:fe751cbe31a214529158a041c9ece16b&#34;&gt;有助于员工的培训发展&lt;/h2&gt;

&lt;p&gt;每家公司都希望雇佣到市场上那些受过最好的教育、拥有高超技能的工程师。但是现实是非常困难的，大多数的时候是需要自己来培养优秀的工程师的。正如我在上面所提到的，那些参与多个开源项目贡献的卓越的工程师是不会换老板的，他们在开源项目所锻炼出来的技能、知识、以及经验要比仅仅是自己公司那点狭小的空间所积累的要快太多了。开源可以有效的增长工程师的技术和领导力，这是大家都有目共睹的。&lt;/p&gt;

&lt;h2 id=&#34;开源可以作为一个很好的演练场地:fe751cbe31a214529158a041c9ece16b&#34;&gt;开源可以作为一个很好的演练场地&lt;/h2&gt;

&lt;p&gt;一些开发者们拥有自己的、小规模的演练场地，还有一些开发者为大型项目贡献目的“仅仅是为了好玩”，无论是那种情况，对于绝大多数的工程师们来说，开源是他们演练场地的不二之选。那么找一个演练场地究竟有何好处了呢？&lt;/p&gt;

&lt;p&gt;演练场地是尝试新的概念和模式的最佳场地。而往往这个演练场地是开放源代码的话，就可以很容易的获得高手们的反馈，代码就可以在各种沟通的地方，如小型聚会、大型研讨会、乃至在线IRC等。&lt;/p&gt;

&lt;p&gt;来自其它公司的工程师带来不同的背景以及用例，通过这种方式，他们可以获得更深层次的洞见。多样化的组织往往会比一个公司内部单一的团队能够达到更好的效果。&lt;/p&gt;

&lt;h2 id=&#34;开源可以激励士气:fe751cbe31a214529158a041c9ece16b&#34;&gt;开源可以激励士气&lt;/h2&gt;

&lt;p&gt;公司让其员工在工作时间参与到开源项目中，是绝对有益处的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;我们获得了学习和发展新技能的时间。&lt;/li&gt;
&lt;li&gt;我们出色的工作，终将会被更广泛的其它公司或个人所了解，而不仅仅限于自己的内部。&lt;/li&gt;
&lt;li&gt;我们可以很容易的和其它公司的工程师们一起讨论代码、设计思路等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在办公时间内让工程师去参与到开源社区中，那就是这个时间段内有大量的社区开发人员们都在线。另外，在当今的竞争激烈的市场中，能够得到免费的宣传非常的不容易了。更何况还能找到优秀的人才。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;译者注： 此处应特别针对中国的开发者，美国的开发者们依然在开源项目中的占绝大多数。所以时差的关系，中国地区的程序员们，和老板带来的挑战有多了一重障碍。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;对于每个项目都有好处:fe751cbe31a214529158a041c9ece16b&#34;&gt;对于每个项目都有好处&lt;/h2&gt;

&lt;p&gt;一些工程师为某深奥的编程语言实现解析器的功能，原因只是为了好玩。还有一些工程师，实现了一个让人们画 8-bit 的艺术画作的网站。每一位参与到开源的人，都会被开源的积极因素感染以及间接的影响。只是在刚参与的时候，表面上看起来这些积极的影响不够明显罢了。&lt;/p&gt;

&lt;p&gt;我以我的工作为例和大家分享一下，我的工作是开发数据库以及它的管理界面。数据库拥有 HTTP API：如果你将一份文档存入到数据库，随后你可以使用一个独特的 URL 来进行访问。&lt;/p&gt;

&lt;p&gt;在过去的一年里，我们收到了几份关于我们用户界面的一些的 Bug，如用户创建了文档，但是却无法使用 HTTP 来打开它们。当我们自以为解决了这个 Bug 的时候，它却又在意想不到的地方再次发生。最终找到了问题的根源，那就是产生此 Bug 是因为使用了特殊的字符，所以我们假设使用了一个错误的编码。但是，另外一个团队解决了此问题，使用16进制的RFC就可正常工作。&lt;/p&gt;

&lt;p&gt;看起来似乎和我所从事的数据库没有任何关系，但是它影响到了用户，具体表现还是数据库的问题。于是我参与了另外一个开源项目：&lt;a href=&#34;https://whatwg.org/&#34;&gt;WHATWG&lt;/a&gt;，这是一个用户终端标准的编辑器。终端标准则是尝试将不同浏览器中的终端给标准化了。Web 标准可是现代web的基石。&lt;/p&gt;

&lt;p&gt;这对于我本身的有关数据库的工作有何好处？好问题！当我开始做这件事的时候我并没有想过太多的益处，但是在几个星期之后，一个意想不到的效果出现了：我们又接到了同样的问题的报告，此问题是我几个星期前就创建的，而且还链接到了RFC，这次，我则为之增加了更多的细节：验证、算法、实例、 RFC 的部分以及 WHATWG 实现的笔记等。&lt;/p&gt;

&lt;p&gt;一个看起来和我的工作无关的项目，但是却对我的日常工作有着频繁的、间接的影响。这很好的解释了一个完全无关的项目可以让公司产生积极的影响。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;译者注：开源是一个具有生命力的世界，由无数的细小的项目所组成，需要以生态系统的眼光来看待。举个例子，去年爆发的 heartbleed 安全漏洞，影响的站点何止千万？但是 OpenSSL 在没有爆发之前，又有多少人关注？ Linux 所用到的库，应用基于 Linux 编写，使用到了 Linux 内核的某些功能等等不胜枚举。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;总结:fe751cbe31a214529158a041c9ece16b&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;支持开源对于雇主来说是好处多多的，项目中所参与的每一位都有益处，不仅仅是指开发者，还包括客户和雇主。目前来说，依然还有很多开发者参与开源是在晚上和周末这个时间段进行的。这其实对于他们的健康来说非常的不好，而且也不可能长期这样下去。这对开源的长远发展来说不是一件好的事情。仅仅只有少数几个公司意识到了花钱雇佣开源的开发者是很有价值的，这些公司会让自己的员工全职为开源做贡献。&lt;/p&gt;

&lt;p&gt;对于你来说，一个想要改变目前困境的好的办法就是去找管理层去谈谈，给他们看看这篇文章，或者是做一些幻灯片的演示。建议以一些小型的实验开始，比如说在你自己的团队设一个有几个月期限的实验，说不定公司看到诸般好处之后，会让大家利用20%的时间去直接参与到开源了呢。当然你要做到不断的提供、有理有据的反馈，尤其是管理者们比较关心的。在你的团队里要分享，无论是那些积极的，还是所谓的消极的影响。&lt;/p&gt;

&lt;p&gt;我非常的肯定，长远来说积极的因素要远远多于消极的因素。管理者会看到这其中的益处的。然后会在整个公司范围内支持你的观点。这样我们就有了改变我们所为之工作的公司的机会，不用担心，我就是刚刚这么干的，而且还很成功。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;译者写在翻译完成之后:fe751cbe31a214529158a041c9ece16b&#34;&gt;译者写在翻译完成之后&lt;/h2&gt;

&lt;p&gt;就国内的情况而言，不容乐观。仍然是文化的问题。大部分的雇主和中、高层经理的思路是：“哦，我花钱培养了两、三年，让其在社区混出个名堂了，然后有人高薪挖走了，公司和我付出的心血全部付之东流。” 这是一个死结，非常的难解：&lt;/p&gt;

&lt;p&gt;0、面对高薪的诱惑，对硅谷文化的曲解，视职业道德为无物。另外国内的环境对于诚信、推荐信之类的机制为空白。&lt;/p&gt;

&lt;p&gt;1、企业降低不了自己的身段，社会主义国企思路，对于自己员工在社区表现没有科学的考核，以及相应的激励机制。&lt;/p&gt;

&lt;p&gt;另外，本文是典型的工程师思维，可能这样的话语很难让非工程师出身的高管们看懂或理解。可能加上管理和营销的角度，会更具说服力。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>